apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    ke-app: helm
    ke-svc: compass
  name: compass-tiller-deploy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      ke-app: helm
      ke-svc: compass
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        ke-app: helm
        ke-svc: compass
    spec:
      containers:
      - image: hub.c.163.com/weiwei04/compass:0.1.0
        command:
        - compass
        args:
        - --listen
        - ":44134"
        - --tiller
        - ":44234"
        - --registry
        - "http://helm-registry"
        name: compass
        ports:
        - containerPort: 44134
          name: compass
          protocol: TCP
      - env:
        - name: TILLER_NAMESPACE
          value: kube-system
        image: gcr.io/kubernetes-helm/tiller:v2.5.0
        imagePullPolicy: IfNotPresent
        name: tiller
        command:
        - /tiller
        args:
        - --listen
        - ":44234"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /liveness
            port: 44135
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 44234
          name: tiller
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readiness
            port: 44135
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    ke-app: helm
    ke-svc: compass
  name: compass
  namespace: kube-system
spec:
  ports:
  - port: 44134
    protocol: TCP
    targetPort: 44134
    nodePort: 32589
  selector:
    ke-app: helm
    ke-svc: compass
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
