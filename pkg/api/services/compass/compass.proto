syntax = "proto3";

package compass;

import "hapi/release/release.proto";
import "hapi/chart/config.proto";
import "google/api/annotations.proto";
//import "google/protobuf/empty.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/timestamp.proto";

option go_package = "compass";

message CreateCompassReleaseRequest {
  string chart = 1;
  string name = 2;
  string namespace = 3;
  hapi.chart.Config values = 4;
  int64 timeout = 5;
  bool wait = 6;
}

message CreateCompassReleaseResponse {
  hapi.release.Release release = 1;
}

message UpdateCompassReleaseRequest {
  string name = 1;
  int32 version = 2;
  hapi.chart.Config values = 3;
  string namespace = 4; // only for auth, not used in compass
}

message UpdateCompassReleaseResponse {
  hapi.release.Release release = 1;
}

message UpgradeCompassReleaseRequest {
  string chart = 1;
  string name = 2;
  hapi.chart.Config values = 3;
  string namespace = 4; // only for auth, not used in compass
}

message UpgradeCompassReleaseResponse {
  hapi.release.Release release = 1;
}

service CompassService {
  rpc CreateCompassRelease(CreateCompassReleaseRequest) returns (CreateCompassReleaseResponse) {
    option (google.api.http) = {
      post: "/v1/namespaces/{namespace}/releases/{name}"
      body: "*"
    };
  }

  rpc UpdateCompassRelease(UpdateCompassReleaseRequest) returns (UpdateCompassReleaseResponse) {
    option (google.api.http) = {
      put: "/v1/namespaces/{namespace}/releases/{name}/values"
      body: "*"
    };
  }

  rpc UpgradeCompassRelease(UpgradeCompassReleaseRequest) returns (UpgradeCompassReleaseResponse) {
    option (google.api.http) = {
      put: "/v1/namespaces/{namespace}/releases/{name}/chart"
      body: "*"
    };
  }
}
